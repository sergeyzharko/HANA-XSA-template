const router = require('express').Router();
const swaggerUi = require('swagger-ui-express');
const swaggerJsdoc = require('swagger-jsdoc');
const { version, name } = require('../../package.json');
const VCAP = JSON.parse(process.env.VCAP_SERVICES);
const xsuaa = VCAP.xsuaa;

// http://localhost:8000/api-docs

const options = {
	swaggerDefinition: {
		// Like the one described here: https://swagger.io/specification/#infoObject
		openapi: '3.0.0',
		info: {
			title: `${name}`,
			version,
			description: 'Test API with autogenerated swagger doc',
		},
		servers: [
			{
				url: '/',
				description: 'Current ENV',
			},
		],
		components: {
			securitySchemes: {
				// apiKey: {
				// 	type: 'apiKey',
				// 	description: `API key to authorize requests(${process.env.AUTH_PREFIX + process.env.AUTH_API_KEY})`,
				// 	name: 'Authorization',
				// 	in: 'header',
				// },
				OAuth2: {
					type: 'oauth2',
					flows: {
						password: {
							tokenUrl: `${xsuaa[0].credentials.url}/oauth/token`,
							scopes: {},
						},
					},
				},
			},
		},
	},
	// List of files to be processes. You can also set globs './routes/*.js'
	apis: [
		'./app.js',
		'./components/**/*.swagger.yaml',
		'./components/swagger/components/**/*.yaml',
	],
};

// const apiKeySettings = {
// 	authAction: {
// 		apiKey: {
// 			name: 'apiKey',
// 			schema: {
// 				type: 'apiKey',
// 				in: 'header',
// 				name: 'Authorization',
// 				description: '',
// 			},
// 			value: process.env.AUTH_PREFIX + process.env.AUTH_API_KEY,
// 		},
// 	},
// };

const oauthSettings = {
	oauth: {
		clientId: xsuaa[0].credentials.clientid,
		clientSecret: xsuaa[0].credentials.clientsecret,
	},
};

const specs = swaggerJsdoc(options);

router.get('/swagger.json', (req, res) => {
	res.setHeader('Content-Type', 'application/json');
	res.send(specs);
});

router.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs, false, oauthSettings));

module.exports = router;